{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LognForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatId","creds","handleSubmit","e","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","style","display","id","files","SendOutlined","MyMessage","message","console","log","test","replace","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessageKey","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReacipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","width","lastMessage","renderMessages","height","LoginForm","setUsername","password","setPassword","error","setError","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e4ef526d.chunk.js","sourcesContent":["import { useState } from \"react\"\r\nimport {sendMessage, isTyping} from 'react-chat-engine'\r\nimport { SendOutlined, PictureOutlined } from \"@ant-design/icons\"\r\nconst MessageForm = (props) => {\r\n    const [value, setValue] = useState('')\r\n    const {chatId, creds} = props\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const text = value.trim()\r\n        if(text.length > 0) sendMessage(creds,chatId, {text})\r\n        setValue('')\r\n    }\r\n    const handleChange = (e) => {\r\n        setValue(e.target.value);\r\n        isTyping(props,chatId)\r\n    }\r\n    const handleUpload = (e) => {\r\n        sendMessage(creds,chatId,{files:e.target.files, text:''})\r\n    }\r\n    return ( \r\n        <form className=\"message-form\" onSubmit={handleSubmit}>\r\n            <input \r\n            className=\"message-input\"\r\n            placeholder=\"send message...\"\r\n            value={value}\r\n            onChange={handleChange}\r\n            onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className=\"image-button\">\r\n                    <PictureOutlined className=\"picture-icon\" />\r\n                </span>\r\n            </label>\r\n            <input \r\n            type=\"file\"\r\n            multiple={false}\r\n            style={{display:'none'}}\r\n            id=\"upload-button\"\r\n            onChange={handleUpload}\r\n            />\r\n            <button type=\"submit\" className=\"send-button\">\r\n                <SendOutlined className=\"send-icon\" />\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\nexport default MessageForm","const MyMessage= ({ message }) => {\r\n    console.log(message);\r\n    \r\n    var test = message.text.replace(/<[^>]+>/g, '');\r\n\r\n    if(message?.attachments?.length > 0) {\r\n        return (\r\n            <img\r\n             src={message.attachments[0].file}\r\n             alt=\"message-attachment\"\r\n             className=\"message-image\"\r\n             style={{float:'right'}}\r\n             /> \r\n\r\n        )\r\n    }\r\n    return (\r\n        <div className=\"message\" style={{float:'right',marginRight:'18px',color:'#fff',backgroundColor:'#3b2a50'}}>\r\n            {test}\r\n        </div>\r\n    )\r\n}\r\nexport default MyMessage","const TheirMessage= ({lastMessageKey , message}) => {\r\n    const isFirstMessageByUser = !lastMessageKey || lastMessageKey.sender.username !== message.sender.username;\r\n\r\n    return (\r\n        <div className=\"message-row\">\r\n            {isFirstMessageByUser &&(\r\n                <div \r\n                className=\"message-avatar\"\r\n                style={{backgroundImage:`url(${message?.sender?.avatar})`}}\r\n                />\r\n            )}\r\n                {message?.attachments?.length > 0 ?\r\n                (\r\n            <img\r\n             src={message.attachments[0].file}\r\n             alt=\"message-attachment\"\r\n             className=\"message-image\"\r\n             style={{marginLeft:isFirstMessageByUser ? '4px' : '48px'}}\r\n             />\r\n             ) : (\r\n            <div className=\"message\" style={{float:'right',backgroundColor:'#cabcdc'}}>\r\n                {message.text}\r\n            </div>\r\n             )\r\n}\r\n        </div>\r\n    )\r\n}\r\nexport default TheirMessage","import MessageForm from './MessageForm'\r\nimport MyMessage from './MyMessage'\r\nimport TheirMessage from './TheirMessage'\r\nconst ChatFeed = (props) => {\r\n    const {chats, activeChat, userName, messages} = props;\r\n    const chat = chats && chats[activeChat]\r\n        const renderReadReacipts = (message, isMyMessage) => {\r\n        return chat.people.map((person,index) => person.last_read === message.id && (\r\n            <div\r\n            key={`read_${index}`}\r\n            className=\"read-receipt\"\r\n            style={{\r\n                float:isMyMessage ? 'right' : 'left',\r\n                backgroundImage:`url(${person?.person?.avatar})`\r\n            }}\r\n            />\r\n        ))\r\n    }\r\n\r\n    const renderMessages = () => {\r\n        const keys = Object.keys(messages);\r\n        return keys.map((key,index) => {\r\n            const message = messages[key]\r\n            const lastMessageKey = index === 0 ? null : keys[index-1];\r\n            const isMyMessage = userName === message.sender.username;\r\n            return (\r\n                <div key={`msg_${index}`} style={{width:'100%'}}>\r\n                    <div className=\"message-block\">\r\n                        {\r\n                            isMyMessage ? <MyMessage message={message} /> : <TheirMessage message={message} lastMessage={lastMessageKey} />\r\n                        }\r\n                    </div>\r\n                    <div className=\"read-recipts\" style={{marginRight: isMyMessage ? '18px' : '0', marginLeft:isMyMessage ? '0px' : '68px'}}>\r\n                    {renderReadReacipts(message,isMyMessage)}\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    }\r\n    if(!chat) return 'Loading....'\r\n    return (\r\n        <div className=\"chat-feed\">\r\n            <div className=\"chat-title-container\">\r\n                <div className=\"chat-title\">\r\n                    {chat ?.title }\r\n                </div>\r\n                <div className=\"chat-subtitle\">\r\n                    {chat.people.map((person => `${person.person.username}`) )}\r\n                </div>\r\n            </div>\r\n            {renderMessages()}\r\n            <div style={{height:'100px'}}/>\r\n            <div className=\"message-form-container\">\r\n                <MessageForm {...props} chatId={activeChat} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatFeed\r\n","import { useState } from \"react\"\r\nimport axios from 'axios'\r\nconst LoginForm = () => {\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('')\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const authObject = { 'Project-ID':'a768ad9f-827e-4df3-b230-07bf948b9451',\r\n        'User-Name':username,\r\n        'User-Secret':password\r\n     };\r\n     try{\r\n       await axios.get('https://api.chatengine.io/chats',\r\n        {headers: authObject});\r\n\r\n        localStorage.setItem('username',username)\r\n        localStorage.setItem('password',password)\r\n\r\n        window.location.reload();\r\n\r\n     } catch (error) {\r\n        setError('incorret credentials.')\r\n     }\r\n    }\r\n    return (\r\n        <div className=\"wrapper\">\r\n            <div className=\"from\">\r\n                <h1 className=\"title\">ChatApp</h1>\r\n                <form onSubmit={handleSubmit}>\r\n                    <input type=\"text\" value={username} onChange={(e) => setUsername(e.target.value)} className=\"input\" placeholder=\"User Name\" required/>\r\n                    <input type=\"password\" value={password}onChange={(e) => setPassword(e.target.value)} className=\"input\" placeholder=\"Password\" required/>\r\n                    <div align=\"center\">\r\n                        <button type=\"submit\" className=\"button\">\r\n                            <span>Start Chating</span>\r\n                        </button>\r\n                    </div>\r\n                    <h2 className=\"error\">\r\n                        {error}\r\n                    </h2>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default LoginForm","import React from 'react'\r\nimport {ChatEngine} from 'react-chat-engine'\r\nimport './App.css'\r\nimport ChatFeed from './components/ChatFeed'\r\nimport LoginForm from './components/LognForm'\r\nconst App = () => {\r\n    if(!localStorage.getItem('username'))return <LoginForm />\r\n    return (\r\n        <ChatEngine\r\n        height=\"100vh\"\r\n        projectID=\"a768ad9f-827e-4df3-b230-07bf948b9451\"\r\n        userName={localStorage.getItem('username')}\r\n        userSecret={localStorage.getItem('password')}\r\n        renderChatFeed={(chatAppProps) => <ChatFeed { ...chatAppProps} />}\r\n        />\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}